@model D_ShipmentModel.D_ShipmentSearchModel

@using X.PagedList.Mvc.Core;
@using X.PagedList;

<style>
    td {
        vertical-align: middle !important;
    }
    .page-no-label {
        font-weight:600!important;
        font-size:13px;
    }
    .pagination {
        margin-top: 0.5em !important;
        margin-bottom: 0em !important;
    }
    .text-ellipsis {
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }
</style>

<table class="sticky_table  table-hover-event">
    <thead>
        <tr>
@*            <th class="table-button"></th>*@
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].ShipmentDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].NextProcess1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].Location1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].ProductCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].ProductAbbreviation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].LotQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].PackingCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].Packing)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].CustomerDeliveryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].CustomerDeliveryTimeClass)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].CustomerDeliverySlipNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].CustomerNextProcess1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].CustomerLocation1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].Remark)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].CreateUserCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].CreateHandyUserCode)
            </th>
            <th style="min-width:120px;">
                @Html.DisplayNameFor(model => model.ShipmentList[0].ScanTime)
            </th>
            <th style="min-width:120px;">
                @Html.DisplayNameFor(model => model.ShipmentList[0].CreateDate)
            </th>
@*            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].UpdateUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipmentList[0].UpdateDate)
            </th>*@
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.ShipmentList.Count(); ++i)
        {
        <tr>
@*            <td class="table-button">
                <button type="button" class="btn btn-light btn-circle"
                        onclick="location.href='@Url.Action("Edit", "D_Shipment" , new { id = Model.ShipmentList[i].ShipmentID })'; return false;">
                    <i class="fas fa-edit"></i>
                </button>
            </td>*@
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].ShipmentDate)
            </td>
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].NextProcess1)
            </td>
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].Location1)
            </td>
            <td>
                @Html.DisplayFor(model => model.ShipmentList[i].ProductCode)
            </td>
            <td>
                @Html.DisplayFor(model => model.ShipmentList[i].ProductAbbreviation)
            </td>
            <td class="text-right">
                @string.Format("{0:#,0}", Model.ShipmentList[i].LotQuantity)
            </td>
            <td class="text-right">
                @string.Format("{0:#,0}", Model.ShipmentList[i].PackingCount)
            </td>
            <td class="text-right">
                @string.Format("{0:#,0}", Model.ShipmentList[i].Quantity)
            </td>
            <td>
                @string.Format("{0:#,0}", Model.ShipmentList[i].Packing)
            </td>
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].CustomerDeliveryDate)
            </td>
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].CustomerDeliveryTimeClass)
            </td>
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].CustomerDeliverySlipNumber)
            </td>
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].CustomerNextProcess1)
            </td>
            <td class="text-center">
                @Html.DisplayFor(model => model.ShipmentList[i].CustomerLocation1)
            </td>
            <td class="text-ellipsis" title="@Model.ShipmentList[i].Remark">
                @Html.DisplayFor(model => model.ShipmentList[i].Remark)
            </td>
            <td>
                    @Html.DisplayFor(model => model.ShipmentList[i].CreateUserCode)
            </td>
            <td>
                    @Html.DisplayFor(model => model.ShipmentList[i].CreateHandyUserCode)
            </td>
            <td>
                    @Html.DisplayFor(model => model.ShipmentList[i].ScanTime)
            </td>
            <td>
                    @Html.DisplayFor(model => model.ShipmentList[i].CreateDate)
            </td>
@*            <td>
                @Html.DisplayFor(model => model.ShipmentList[i].UpdateUser)
            </td>
            <td>
                @Html.DisplayFor(model => model.ShipmentList[i].UpdateDate)
            </td>*@
        </tr>
        }
    </tbody>
</table>

@Html.PagedListPager(
        (IPagedList)Model.ShipmentList,
        page => Url.Action("SearchByPageChange", new { page }),
        new X.PagedList.Mvc.Core.PagedListRenderOptions    //Bootstrap4を利用する場合はオプションを利用してタグにクラスを追加しないとデザインが反映されない
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" },
            MaximumPageNumbersToDisplay = 10,                                                 //表示するページャーの数
            DisplayLinkToNextPage = X.PagedList.Mvc.Common.PagedListDisplayMode.IfNeeded,      //「次へ」の非表示設定
            DisplayLinkToPreviousPage = X.PagedList.Mvc.Common.PagedListDisplayMode.IfNeeded,   //「前へ」の非表示設定
            DisplayLinkToFirstPage = X.PagedList.Mvc.Common.PagedListDisplayMode.IfNeeded,      //「最初へ」の非表示設定
            DisplayLinkToLastPage = X.PagedList.Mvc.Common.PagedListDisplayMode.IfNeeded,       //「最後へ」の表示設定
        }
)
<span class="page-no-label">
    @(Model.Page.PageRowCount == 0 ? 0 : @Model.Page.PageRowStartNo) - @Model.Page.PageRowEndNo 件 / @Model.Page.PageRowCount 件中
</span>

<script>
    $(document).ready(function () {

    })

</script>
